in test

test/suite literal {
    boolean_true()
    boolean_false()
    integer()
    signed_integer_plus()
    signed_integer_minus()
    floating_point()
    hexadecimal()
    string_single_quote()
    string_double_quote()
    floating_point_scientific_plus_e()
    floating_point_scientific_plus_e_upper()
    floating_point_scientific_minus_e()
    floating_point_scientific_minus_e_upper()
    floating_point_signed_scientific_plus_e()
    floating_point_signed_scientific_plus_e_upper()
    floating_point_signed_scientific_minus_e()
    floating_point_signed_scientific_minus_e_upper()
    integer_scientific_plus_e()
    integer_scientific_plus_e_upper()
    integer_scientific_minus_e()
    integer_scientific_minus_e_upper()
    signed_integer_scientific_plus_e()
    signed_integer_scientific_plus_e_upper()
    signed_integer_scientific_minus_e()
    signed_integer_scientific_minus_e_upper()
    integer_measurement()
    signed_integer_plus_measurement()
    signed_integer_minus_measurement()
    floating_point_measurement()
    signed_integer_plus_measurement_scientific_plus_e()
    signed_integer_minus_measurement_scientific_plus_e()
    floating_point_measurement_scientific_plus_e()
    signed_integer_plus_measurement_scientific_minus_e()
    signed_integer_minus_measurement_scientific_minus_e()
    floating_point_measurement_scientific_minus_e()

    null_literal()
}

test/suite unary {
    literal()
    literal_nested()
    precedence()
}

test/suite binary {
    add()
    add_nested()
    sub()
    sub_nested()
    mul()
    mul_nested()
    div()
    div_nested()
    mod()
    mod_nested()
    shift()
    shift_nested()
    bitwise_and()
    bitwise_and_nested()
    bitwise_xor()
    bitwise_xor_nested()
    bitwise_or()
    bitwise_or_nested()
    gt()
    gt_nested()
    lt()
    lt_nested()
    gteq()
    gteq_nested()
    lteq()
    lteq_nested()
    eq()
    eq_nested()
    assign()
    assign_nested()
    assign_add()
    assign_sub()
    assign_mul()
    assign_div()
    assign_mod()
    assign_shiftleft()
    assign_shiftright()
    assign_and()
    assign_or()
    assign_xor()
    neq()
    neq_nested()
    cond_and()
    cond_and_nested()
    cond_and_kw()
    cond_and_kw_nested()
    cond_or()
    cond_or_nested()
    cond_or_kw()
    cond_or_kw_nested()
    add_mul()
    add_mul_paren()
    add_shift()
    add_shift_paren()
}

test/suite ternary {
    literal()
    literal_nested_true()
    literal_nested_false()
}

test/suite cast {
    identifier()
    nested_identifier()
}

test/suite postfix {
    call_arg_1()
    call_arg_n()
    call_arg_1_key()
    call_arg_n_key()
    call_arg_1_composite()
    call_arg_n_composite()
    call_arg_1_collection()
    call_arg_n_collection()
    inc()
    dec()
}

test/suite identifier {
    identifier()
    full_identifier()
    nested_identifier()
    full_nested_identifier()
    root_identifier()
}

test/suite member {
    member()
    member_nested_1()
    member_nested_n()
}

test/suite init {
    id_0()
    id_1()
    id_n()
    id_1_comp()
    id_n_comp()
    id_1_coll()
    id_n_coll()
    id_1_key()
    id_n_key()
    id_1_key_comp()
    id_n_key_comp()
    id_1_key_coll()
    id_n_key_coll()
    id_inline()
    id_inline_nested()
    full_id_0()
    full_id_1()
    full_id_n()
    full_id_inline()
    full_id_inline_nested()
}
